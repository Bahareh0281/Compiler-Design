# Generated from D:/Bahareh/7/Files/Compiler/Git/Compiler-Design/Homeworks/pythonProject/JavaLike.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,145,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,0,
        1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
        1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,
        1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,
        1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,19,1,20,1,20,1,20,1,21,4,21,119,8,21,11,21,12,21,120,1,22,
        4,22,124,8,22,11,22,12,22,125,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,3,23,137,8,23,1,24,4,24,140,8,24,11,24,12,24,141,1,24,
        1,24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,13,
        32,32,148,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,1,51,1,0,0,0,3,57,1,0,0,0,5,59,1,0,0,0,7,61,1,0,0,0,9,63,1,
        0,0,0,11,65,1,0,0,0,13,67,1,0,0,0,15,69,1,0,0,0,17,73,1,0,0,0,19,
        81,1,0,0,0,21,84,1,0,0,0,23,89,1,0,0,0,25,95,1,0,0,0,27,99,1,0,0,
        0,29,101,1,0,0,0,31,103,1,0,0,0,33,105,1,0,0,0,35,107,1,0,0,0,37,
        109,1,0,0,0,39,111,1,0,0,0,41,114,1,0,0,0,43,118,1,0,0,0,45,123,
        1,0,0,0,47,136,1,0,0,0,49,139,1,0,0,0,51,52,5,99,0,0,52,53,5,108,
        0,0,53,54,5,97,0,0,54,55,5,115,0,0,55,56,5,115,0,0,56,2,1,0,0,0,
        57,58,5,123,0,0,58,4,1,0,0,0,59,60,5,125,0,0,60,6,1,0,0,0,61,62,
        5,59,0,0,62,8,1,0,0,0,63,64,5,40,0,0,64,10,1,0,0,0,65,66,5,41,0,
        0,66,12,1,0,0,0,67,68,5,44,0,0,68,14,1,0,0,0,69,70,5,105,0,0,70,
        71,5,110,0,0,71,72,5,116,0,0,72,16,1,0,0,0,73,74,5,98,0,0,74,75,
        5,111,0,0,75,76,5,111,0,0,76,77,5,108,0,0,77,78,5,101,0,0,78,79,
        5,97,0,0,79,80,5,110,0,0,80,18,1,0,0,0,81,82,5,105,0,0,82,83,5,102,
        0,0,83,20,1,0,0,0,84,85,5,101,0,0,85,86,5,108,0,0,86,87,5,115,0,
        0,87,88,5,101,0,0,88,22,1,0,0,0,89,90,5,119,0,0,90,91,5,104,0,0,
        91,92,5,105,0,0,92,93,5,108,0,0,93,94,5,101,0,0,94,24,1,0,0,0,95,
        96,5,102,0,0,96,97,5,111,0,0,97,98,5,114,0,0,98,26,1,0,0,0,99,100,
        5,43,0,0,100,28,1,0,0,0,101,102,5,45,0,0,102,30,1,0,0,0,103,104,
        5,42,0,0,104,32,1,0,0,0,105,106,5,47,0,0,106,34,1,0,0,0,107,108,
        5,60,0,0,108,36,1,0,0,0,109,110,5,62,0,0,110,38,1,0,0,0,111,112,
        5,61,0,0,112,113,5,61,0,0,113,40,1,0,0,0,114,115,5,33,0,0,115,116,
        5,61,0,0,116,42,1,0,0,0,117,119,7,0,0,0,118,117,1,0,0,0,119,120,
        1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,44,1,0,0,0,122,124,7,
        1,0,0,123,122,1,0,0,0,124,125,1,0,0,0,125,123,1,0,0,0,125,126,1,
        0,0,0,126,46,1,0,0,0,127,128,5,116,0,0,128,129,5,114,0,0,129,130,
        5,117,0,0,130,137,5,101,0,0,131,132,5,102,0,0,132,133,5,97,0,0,133,
        134,5,108,0,0,134,135,5,115,0,0,135,137,5,101,0,0,136,127,1,0,0,
        0,136,131,1,0,0,0,137,48,1,0,0,0,138,140,7,2,0,0,139,138,1,0,0,0,
        140,141,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,0,142,143,1,0,0,0,
        143,144,6,24,0,0,144,50,1,0,0,0,5,0,120,125,136,141,1,6,0,0
    ]

class JavaLikeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    ID = 22
    INT = 23
    BOOL = 24
    WS = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'{'", "'}'", "';'", "'('", "')'", "','", "'int'", 
            "'boolean'", "'if'", "'else'", "'while'", "'for'", "'+'", "'-'", 
            "'*'", "'/'", "'<'", "'>'", "'=='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "BOOL", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "ID", "INT", "BOOL", "WS" ]

    grammarFileName = "JavaLike.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


